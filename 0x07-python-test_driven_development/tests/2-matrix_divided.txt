===============================
The ``2-matrix-divided`` module
===============================

Using ``matrix_divided``
------------------------

Checking docstring for module:
    >>> __import__('2-matrix_divided').__doc__ != None
    True

First import "matrix_divided" from the "2-matrix_divided" module:

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Check docstring for function:
    >>> len(matrix_divided.__doc__) > 0
    True

Now we define a matrix:

    >>> matrix = [[1, 2, 3], [4, 5, 6]]

Now you can use it:

    >>> matrix_divided(matrix, -2.1)
    [[-0.48, -0.95, -1.43], [-1.9, -2.38, -2.86]]

    >>> matrix_divided(matrix, float('inf'))
    [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

    >>> matrix_divided(matrix, 2)
    [[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

Can be used with scientific notation:

    >>> matrix_divided(matrix, 1e2)
    [[0.01, 0.02, 0.03], [0.04, 0.05, 0.06]]

    >>> matrix_divided(matrix, 1e-2)
    [[100.0, 200.0, 300.0], [400.0, 500.0, 600.0]]

    >>> matrix_divided(matrix, 2e2)
    [[0.01, 0.01, 0.01], [0.02, 0.03, 0.03]]

Some error cases:

    >>> matrix_divided(list(), 2)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

    >>> matrix_divided([[], [], []], 2)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats